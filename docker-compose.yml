version: "3.9"

networks:
  net:

volumes:
  postgres:

services:
  web:
    build:
      context: ./services
      dockerfile: ./Dockerfile
    env_file:
      - services/.env
    volumes:
      - ./services:/services
    ports:
      - "8000:8000"
    depends_on:
      worker:
        condition: service_healthy
      db:
        condition: service_healthy

    networks:
      - net

  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: postgres
    networks:
      - net
    expose:
      - 5432
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: psql -U postgres -c 'select 1;'
      interval: 10s
      timeout: 10s
      retries: 5


  redis:
    image: redis:7-alpine
    hostname: redis
    networks:
      - net
    healthcheck:
      test: redis-cli ping | grep PONG
      interval: 10s
      timeout: 10s
      retries: 5



  worker:
    build:
      context: services
    hostname: worker
    entrypoint: celery
    command: -A services.celery_app worker --loglevel=info
    volumes:
      - ./services:/services
    links:
      - redis
    healthcheck:
      test: celery -A services.celery_app status
      interval: 10s
      timeout: 10s
      retries: 5
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - net

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx.conf.d/app.conf
    ports:
      - 80:80
